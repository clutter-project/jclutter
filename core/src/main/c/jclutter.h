#include <jni.h>

JNIEXPORT void JNICALL Java_org_jclutter_Clutter_init(JNIEnv *, jclass, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_mainStart(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_mainQuit(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_mainLevel(JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Clutter_isDebugEnabled(JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Clutter_isShowFps(JNIEnv *, jclass);
JNIEXPORT jlong JNICALL Java_org_jclutter_Clutter_getTimestamp(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getActorPointerByGID(JNIEnv *, jclass, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_setDefaultFrameRate(JNIEnv *, jclass, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getDefaultFrameRate(JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Clutter_isMotionEventsEnabled(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_setMotionEventsEnabled(JNIEnv *, jclass, jboolean);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_clearGlyphCache(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_setFontFlags(JNIEnv *, jclass, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getFontFlags(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsInit(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsEnter(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsLeave(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsAddIdle(JNIEnv *, jclass, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsAddTimeout(JNIEnv *, jclass, jint, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsAddFrameSource(JNIEnv *, jclass, jint, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_threadsAddRepaint(JNIEnv *, jclass, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_Clutter_getKeyboardGrab(JNIEnv *, jclass);
JNIEXPORT jobject JNICALL Java_org_jclutter_Clutter_getPointerGrab(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_grabKeyboard(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_grabPointer(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_ungrabKeyboard(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_ungrabPointer(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_grabPointerForDevice(JNIEnv *, jclass, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Clutter_ungrabPointerForDevice(JNIEnv *, jclass, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getMajorVersion(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getMinorVersion(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getMicroVersion(JNIEnv *, jclass);
JNIEXPORT jstring JNICALL Java_org_jclutter_Clutter_getVersion(JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Clutter_checkVersion(JNIEnv *, jclass, jint, jint, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Clutter_hasFeature(JNIEnv *, jclass, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Clutter_getFeatures(JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_org_jclutter_Actor_show(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_showAll(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_hide(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_hideAll(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_realize(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_unrealize(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_queueRedraw(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_queueRelayout(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_destroy(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_shouldPickPaint(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getAllocationBox(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getAllocationGeometry(JNIEnv *, jobject);
JNIEXPORT jobjectArray JNICALL Java_org_jclutter_Actor_getAllocationVertices(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getPreferredSize(JNIEnv *, jobject);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getPreferredWidth(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getPreferredHeight(JNIEnv *, jobject, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setFixedPositionSet(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_getFixedPositionSet(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setGeometry(JNIEnv *, jobject, jint, jint, jint, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getGeometry(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setSize(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getSize(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setPosition(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getPosition(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setWidth(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getWidth(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setHeight(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getHeight(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setX(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getX(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setY(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getY(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_moveBy(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setRotation(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getRotation(JNIEnv *, jobject, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_isRotated(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setOpacity(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Actor_getOpacity(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setName(JNIEnv *, jobject, jstring);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getName(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setClip(JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getClip(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_removeClip(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_hasClip(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_raise(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_lower(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_raiseTop(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_lowerBottom(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getStage(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setDepth(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_Actor_getDepth(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setScale(JNIEnv *, jobject, jdouble, jdouble, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setScaleWithGravity(JNIEnv *, jobject, jdouble, jdouble, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getScale(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getScaleGravity(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_isScaled(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_applyTransformToPoint(JNIEnv *, jobject, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_transformStagePoint(JNIEnv *, jobject, jint, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_applyRelativeTransformToPoint(JNIEnv *, jobject, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getTransformedPosition(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getTransformedSize(JNIEnv *, jobject);
JNIEXPORT jbyte JNICALL Java_org_jclutter_Actor_getPaintOpacity(JNIEnv *, jobject);
JNIEXPORT jobjectArray JNICALL Java_org_jclutter_Actor_getAbsAllocationVertices(JNIEnv *, jobject);
JNIEXPORT jobjectArray JNICALL Java_org_jclutter_Actor_boxGetFromVertices(JNIEnv *, jclass, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setAnchorPoint(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getAnchorPoint(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setAnchorPointFromGravity(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_moveAnchorPoint(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_moveAnchorPointFromGravity(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setReactive(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_isReactive(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_setShader(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getShader(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setShaderParamFloat(JNIEnv *, jobject, jstring, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setShaderParamInt(JNIEnv *, jobject, jstring, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_grabKeyFocus(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getPangoContext(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_createPangoContext(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_createPangoLayout(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_isInClonePaint(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Actor_setTextDirection(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Actor_getTextDirection(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Actor_isMapped(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Actor_getParent(JNIEnv *, jobject);

JNIEXPORT jobject JNICALL Java_org_jclutter_Color_getColor(JNIEnv *, jclass, jstring);

JNIEXPORT jint JNICALL Java_org_jclutter_Stage_newInstance(JNIEnv *, jclass);
JNIEXPORT jobject JNICALL Java_org_jclutter_Stage_getDefault(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Stage_getDefaultId(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setDefault(JNIEnv *, jclass, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Stage_isDefault(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setColor(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Stage_getColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setFullscreen(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Stage_isFullscreen(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_showCursor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_hideCursor(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Stage_getActorAtPos(JNIEnv *, jobject, jint, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_ensureCurrent(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_queueRedraw(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setKeyFocus(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Stage_getKeyFocus(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setThrottleMotionEvents(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Stage_isThrottleMotionEvents(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setUseAlpha(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Stage_isUseAlpha(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setPerspective(JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setTitle(JNIEnv *, jobject, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_Stage_getTitle(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setUserResizable(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Stage_getUserResizable(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setUseFog(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Stage_getUseFog(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Stage_setFog(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_Stage_getFog(JNIEnv *, jobject);

JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setUri(JNIEnv *, jclass, jobject, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_MediaSupport_getUri(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setSubtitleUri(JNIEnv *, jclass, jobject, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_MediaSupport_getSubtitleUri(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setSubtitleFontname(JNIEnv *, jclass, jobject, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_MediaSupport_getSubtitleFontname(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setPlaying(JNIEnv *, jclass, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_MediaSupport_isPlaying(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setProgress(JNIEnv *, jclass, jobject, jdouble);
JNIEXPORT jdouble JNICALL Java_org_jclutter_MediaSupport_getProgress(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setAudioVolume(JNIEnv *, jclass, jobject, jdouble);
JNIEXPORT jdouble JNICALL Java_org_jclutter_MediaSupport_getAudioVolume(JNIEnv *, jclass, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_MediaSupport_isCanSeek(JNIEnv *, jclass, jobject);
JNIEXPORT jdouble JNICALL Java_org_jclutter_MediaSupport_getBufferFill(JNIEnv *, jclass, jobject);
JNIEXPORT jdouble JNICALL Java_org_jclutter_MediaSupport_getDuration(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_MediaSupport_setFileName(JNIEnv *, jclass, jobject, jstring);

JNIEXPORT jint JNICALL Java_org_jclutter_Texture_newInstance(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Texture_newFromFile(JNIEnv *, jclass, jstring);
JNIEXPORT jint JNICALL Java_org_jclutter_Texture_newFromActor(JNIEnv *, jclass, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_setFromFile(JNIEnv *, jobject, jstring);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_setFromRgbData(JNIEnv *, jobject, jstring, jboolean, jint, jint, jint, jint, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_setFromYuvData(JNIEnv *, jobject, jstring, jint, jint, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_setAreaFromRgbData(JNIEnv *, jobject, jstring, jboolean, jint, jint, jint, jint, jint, jint, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_Texture_getBaseSize(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_Texture_getCoglPixelFormat(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_Texture_getFilterQuality(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setFilterQuality(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Texture_getMaxTileWaste(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setKeepAspectRatio(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_isKeepAspectRatio(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setLoadAsync(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_isLoadAsync(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setLoadDataAsync(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_isLoadDataAsync(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setSyncSize(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_isSyncSize(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setRepeat(JNIEnv *, jobject, jboolean, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_isRepeatX(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Texture_isRepeatY(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Texture_getCoglMaterial(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setCoglMaterial(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Texture_getCoglTexture(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Texture_setCoglTexture(JNIEnv *, jobject, jobject);

JNIEXPORT jint JNICALL Java_org_jclutter_Rectangle_rectangleNew(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_Rectangle_rectangleNewWithColor(JNIEnv *, jclass, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Rectangle_getColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Rectangle_setColor(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Rectangle_getBorderColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Rectangle_setBorderColor(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_Rectangle_getBorderWidth(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Rectangle_setBorderWidth(JNIEnv *, jobject, jint);

JNIEXPORT jstring JNICALL Java_org_jclutter_Text_getChars(JNIEnv *, jobject, jint, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_newInstance(JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_activate(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_newWithText(JNIEnv *, jclass, jstring, jstring);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_newFull(JNIEnv *, jclass, jstring, jstring, jobject);
JNIEXPORT jstring JNICALL Java_org_jclutter_Text_getText(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setText(JNIEnv *, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setMarkup(JNIEnv *, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setActivatable(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isActivatable(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Text_getColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setColor(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setEllipsizeMode(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getEllipsizeMode(JNIEnv *, jobject);
JNIEXPORT jstring JNICALL Java_org_jclutter_Text_getFontName(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setFontName(JNIEnv *, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setPasswordChar(JNIEnv *, jobject, jchar);
JNIEXPORT jchar JNICALL Java_org_jclutter_Text_getPasswordChar(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setLineAlignment(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getLineAlignment(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isLineWrap(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setLineWrap(JNIEnv *, jobject, jboolean);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setLineWrapMode(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getLineWrapMode(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setMaxLength(JNIEnv *, jobject, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isUseMarkup(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setUseMarkup(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isJustify(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setJustify(JNIEnv *, jobject, jboolean);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getCursorPosition(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setCursorPosition(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Text_insertUnichar(JNIEnv *, jobject, jchar);
JNIEXPORT void JNICALL Java_org_jclutter_Text_deleteChars(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Text_insertText(JNIEnv *, jobject, jstring, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Text_deleteText(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Text_deleteSelection(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setCursorVisible(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isCursorVisible(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setCursorColor(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Text_getCursorColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setCursorSize(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getCursorSize(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getMaxLength(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setSelectionBound(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Text_getSelectionBound(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setSelectionColor(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Text_getSelectionColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setSelectable(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isSelectable(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setEditable(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isEditable(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Text_setSingleLineMode(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Text_isSingleLineMode(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Text_positionToCoords(JNIEnv *, jobject, jint);

JNIEXPORT jint JNICALL Java_org_jclutter_Group_groupNew(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Group_removeAll(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_Group_getChildrenCount(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Group_getChild(JNIEnv *, jobject, jint);

JNIEXPORT void JNICALL Java_org_jclutter_Container_addActors(JNIEnv *, jobject, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Container_lowerChild(JNIEnv *, jobject, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Container_raiseChild(JNIEnv *, jobject, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Container_removeActors(JNIEnv *, jobject, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Container_sortDepthOrder(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Container_childGet(JNIEnv *, jobject, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_Container_childSet(JNIEnv *, jobject, jobject, jstring, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Container_findChildByName(JNIEnv *, jobject, jstring);
JNIEXPORT jobject JNICALL Java_org_jclutter_Container_getChildren(JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_org_jclutter_Clone_newInstance(JNIEnv *, jclass, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Clone_getSource(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Clone_setSource(JNIEnv *, jobject, jobject);

JNIEXPORT jint JNICALL Java_org_jclutter_animation_Timeline_timelineNew(JNIEnv *, jclass, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Timeline_clone(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Timeline_getDuration(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_setDuration(JNIEnv *, jobject, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Timeline_isLoop(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_setLoop(JNIEnv *, jobject, jboolean);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Timeline_getDelay(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_setDelay(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Timeline_getDirection(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_setDirection(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_start(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_pause(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_stop(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_rewind(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_skip(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_advance(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Timeline_getDelta(JNIEnv *, jobject);
JNIEXPORT jdouble JNICALL Java_org_jclutter_animation_Timeline_getProgress(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Timeline_getElapsedTime(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Timeline_isPlaying(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_addMarkerAtTime(JNIEnv *, jobject, jstring, jint);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Timeline_hasMarker(JNIEnv *, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_removeMarker(JNIEnv *, jobject, jstring);
JNIEXPORT jobjectArray JNICALL Java_org_jclutter_animation_Timeline_listMarkers(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Timeline_advanceToMarker(JNIEnv *, jobject, jstring);

JNIEXPORT jint JNICALL Java_org_jclutter_animation_Score_scoreNew(JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Score_isLoop(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_setLoop(JNIEnv *, jobject, jboolean);
JNIEXPORT jlong JNICALL Java_org_jclutter_animation_Score_append(JNIEnv *, jobject, jobject, jobject);
JNIEXPORT jlong JNICALL Java_org_jclutter_animation_Score_appendAtMarker(JNIEnv *, jobject, jobject, jstring, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_remove(JNIEnv *, jobject, jlong);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_removeAll(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Score_getTimeline(JNIEnv *, jobject, jlong);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Score_listTimelines(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_start(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_pause(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_stop(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Score_rewind(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Score_isPlaying(JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_org_jclutter_animation_ScaleBehaviour_behaviourScaleNew(JNIEnv *, jclass, jobject, jdouble, jdouble, jdouble, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_animation_ScaleBehaviour_setBounds(JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_RotateBehaviour_behaviourRotateNew(JNIEnv *, jclass, jobject, jint, jint, jdouble, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_animation_RotateBehaviour_setAxis(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_RotateBehaviour_getAxis(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_RotateBehaviour_setDirection(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_RotateBehaviour_getDirection(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_RotateBehaviour_setBounds(JNIEnv *, jobject, jdouble, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_animation_RotateBehaviour_setCenter(JNIEnv *, jobject, jint, jint, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_RotateBehaviour_getCenter(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_PathBehaviour_behaviourPathNew(JNIEnv *, jclass, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_PathBehaviour_appendKnot(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_PathBehaviour_clear(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_OpacityBehaviour_behaviourOpacityNew(JNIEnv *, jclass, jobject, jbyte, jbyte);
JNIEXPORT void JNICALL Java_org_jclutter_animation_OpacityBehaviour_setBounds(JNIEnv *, jobject, jbyte, jbyte);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_OpacityBehaviour_getBounds(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_EllipseBehaviour_behaviourEllipseNew(JNIEnv *, jclass, jobject, jint, jint, jint, jint, jint, jdouble, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setCenter(JNIEnv *, jobject, jint, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_EllipseBehaviour_getCenter(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setAngleStart(JNIEnv *, jobject, jdouble);
JNIEXPORT jdouble JNICALL Java_org_jclutter_animation_EllipseBehaviour_getAngleStart(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setAngleEnd(JNIEnv *, jobject, jdouble);
JNIEXPORT jdouble JNICALL Java_org_jclutter_animation_EllipseBehaviour_getAngleEnd(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setWidth(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_animation_EllipseBehaviour_getWidth(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setHeight(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_animation_EllipseBehaviour_getHeight(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setDirection(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_EllipseBehaviour_getDirection(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setTilt(JNIEnv *, jobject, jdouble, jdouble, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_animation_EllipseBehaviour_setAngleTilt(JNIEnv *, jobject, jint, jdouble);

JNIEXPORT jint JNICALL Java_org_jclutter_animation_DepthBehaviour_depthNew(JNIEnv *, jclass, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_DepthBehaviour_setBounds(JNIEnv *, jobject, jint, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_DepthBehaviour_getBounds(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Behaviour_apply(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Behaviour_remove(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Behaviour_removeAll(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Behaviour_isApplied(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Behaviour_getActorCount(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Behaviour_getActors(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Behaviour_getActorAt(JNIEnv *, jobject, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Behaviour_getAlpha(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Behaviour_setAlpha(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Alpha_alphaNew(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Alpha_alphaNewFull(JNIEnv *, jclass, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Alpha_getAlpha(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Alpha_setFunc(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Alpha_setTimeline(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Alpha_getTimeline(JNIEnv *, jobject);

JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_setActor(JNIEnv *,jobject,jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Animation_getActor(JNIEnv *,jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Animation_newInstance(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_setNativeMode(JNIEnv *,jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Animation_getNativeMode(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_setDuration(JNIEnv *,jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Animation_getDuration(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_setLoop(JNIEnv *,jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Animation_isLoop(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_setTimeline(JNIEnv *,jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Animation_getTimeline(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_setAlpha(JNIEnv *,jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Animation_getAlpha(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_completed(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_bindDouble(JNIEnv *,jobject, jstring, jdoubleArray);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_bindBoolean(JNIEnv *,jobject, jstring, jbooleanArray);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_bindInteger(JNIEnv *,jobject, jstring, jintArray);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_bindFloat(JNIEnv *,jobject, jstring, jfloatArray);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Animation_hasProperty(JNIEnv *,jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animation_unbindProperty(JNIEnv *,jobject, jstring);

JNIEXPORT jint JNICALL Java_org_jclutter_animation_Path_getLength(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_clear(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Path_pathNew(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Path_pathNewWithDescription(JNIEnv *, jclass, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addMoveTo(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addRelMoveTo(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addLineTo(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addRelLineTo(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addCurveTo(JNIEnv *, jobject, jint, jint, jint, jint, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addRelCurveTo(JNIEnv *, jobject, jint, jint, jint, jint, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addClose(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addString(JNIEnv *, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_addNode(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Path_getNodeCount(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Path_getNodeAt(JNIEnv *, jobject, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Path_getNodes(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_insertNodeAt(JNIEnv *, jobject, jint, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_removeNodeAt(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_replaceNodeAt(JNIEnv *, jobject, jint, jobject);
JNIEXPORT jstring JNICALL Java_org_jclutter_animation_Path_getDescription(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Path_setDescription(JNIEnv *, jobject, jstring);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Path_getPosition(JNIEnv *, jobject, jdouble);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Animator_run(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Animator_newInstance(JNIEnv *, jclass);
JNIEXPORT jobject JNICALL Java_org_jclutter_animation_Animator_getTimeline(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setTimeline(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_animation_Animator_getDuration(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setDuration(JNIEnv *, jobject, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setEaseIn(JNIEnv *, jobject, jobject, jstring, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_animation_Animator_isEaseIn(JNIEnv *, jobject, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setKeyInt(JNIEnv *, jobject, jobject, jstring, jint, jdouble, jint);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setKeyFloat(JNIEnv *, jobject, jobject, jstring, jint, jdouble, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setKeyDouble(JNIEnv *, jobject, jobject, jstring, jint, jdouble, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_animation_Animator_setKeyBoolean(JNIEnv *, jobject, jobject, jstring, jint, jdouble, jboolean);


JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_fromMillimeters(JNIEnv *, jclass, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_fromPoints(JNIEnv *, jclass, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_fromEm(JNIEnv *, jclass, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_fromEmForFont(JNIEnv *, jclass, jstring, jfloat);
JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_fromPixels(JNIEnv *, jclass, jint);
JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_fromString(JNIEnv *, jclass, jstring);
JNIEXPORT jfloat JNICALL Java_org_jclutter_util_Units_toPixels(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_util_Units_copy(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_util_Units_free(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_util_Units_getUnitType(JNIEnv *, jobject);
JNIEXPORT jfloat JNICALL Java_org_jclutter_util_Units_getUnitValue(JNIEnv *, jobject);
JNIEXPORT jstring JNICALL Java_org_jclutter_util_Units_toString(JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_org_jclutter_Shader_shaderNew(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_setVertexSource(JNIEnv *, jobject, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_Shader_getVertexSource(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_setFragmentSource(JNIEnv *, jobject, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_Shader_getFragmentSource(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Shader_compile(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_release(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Shader_isCompiled(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_setEnabled(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_Shader_isEnabled(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_setUniformInt(JNIEnv *, jobject, jstring, jint);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_setUniformFloat(JNIEnv *, jobject, jstring, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_Shader_setUniformFloatArray(JNIEnv *, jobject, jstring, jfloatArray);

JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getType(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getTime(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getFlag(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_events_Event_getStage(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_events_Event_getSource(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_events_Event_getCoords(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_events_Event_free(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getState(JNIEnv *, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_events_Event_eventsPending(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getDeviceId(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getClickCount(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getButton(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getKeySymbol(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getKeyCode(JNIEnv *, jobject);
JNIEXPORT jchar JNICALL Java_org_jclutter_events_Event_getKeyUnicode(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getModifierState(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_events_Event_getDirection(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_events_Event_getRelated(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_events_Event_getInputDevice(JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_org_jclutter_InputDevice_getDeviceId(JNIEnv *,jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_InputDevice_getDeviceTypeInt(JNIEnv *,jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_InputDeviceManager_getDefaultId(JNIEnv *, jclass);
JNIEXPORT jobject JNICALL Java_org_jclutter_InputDeviceManager_listDevices(JNIEnv *, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_InputDeviceManager_getInputDevice(JNIEnv *, jobject, jint);

JNIEXPORT jint JNICALL Java_org_jclutter_KeyBindingPool_newInstance(JNIEnv *, jclass, jstring);
JNIEXPORT jobject JNICALL Java_org_jclutter_KeyBindingPool_find(JNIEnv *,jclass,jstring);
JNIEXPORT void JNICALL Java_org_jclutter_KeyBindingPool_installAction(JNIEnv *, jobject, jstring, jint, jint, jint, jclass, jstring);
JNIEXPORT jstring JNICALL Java_org_jclutter_KeyBindingPool_findAction(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_KeyBindingPool_removeAction(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_KeyBindingPool_blockAction(JNIEnv *, jobject, jstring);
JNIEXPORT void JNICALL Java_org_jclutter_KeyBindingPool_unblockAction(JNIEnv *, jobject, jstring);
JNIEXPORT jboolean JNICALL Java_org_jclutter_KeyBindingPool_activate(JNIEnv *, jobject, jobject, jint, jint);

JNIEXPORT jint JNICALL Java_org_jclutter_Backend_getDefaultBackend(JNIEnv *, jclass);
JNIEXPORT jdouble JNICALL Java_org_jclutter_Backend_getResolution(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Backend_setResolution(JNIEnv *, jobject, jdouble);
JNIEXPORT void JNICALL Java_org_jclutter_Backend_setDoubleClickTime(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Backend_getDoubleClickTime(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Backend_setDoubleClickDistance(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_Backend_getDoubleClickDistance(JNIEnv *, jobject);
JNIEXPORT jstring JNICALL Java_org_jclutter_Backend_getFontName(JNIEnv *,jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Backend_setFontName(JNIEnv *,jobject,jstring);

JNIEXPORT jint JNICALL Java_org_jclutter_Box_newInstance(JNIEnv *, jclass, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Box_setLayoutManager(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Box_getLayoutManager(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Box_setColor(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_Box_getColor(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_Box_pack(JNIEnv *, jobject, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Box_packAfter(JNIEnv *, jobject, jobject, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Box_packBefore(JNIEnv *, jobject, jobject, jobjectArray);
JNIEXPORT void JNICALL Java_org_jclutter_Box_packAt(JNIEnv *, jobject, int, jobjectArray);

JNIEXPORT void JNICALL Java_org_jclutter_LayoutManager_allocate(JNIEnv *, jobject, jobject, jobject, jint);
JNIEXPORT jfloat JNICALL Java_org_jclutter_LayoutManager_getPreferredWidth(JNIEnv *, jobject, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_LayoutManager_getMinimumWidth(JNIEnv *, jobject, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_LayoutManager_getPreferredHeight(JNIEnv *, jobject, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_LayoutManager_getMinimumHeight(JNIEnv *, jobject, jobject, jfloat);
JNIEXPORT void JNICALL Java_org_jclutter_LayoutManager_layoutChanged(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_LayoutManager_setContainer(JNIEnv *, jobject, jobject);
JNIEXPORT jobject JNICALL Java_org_jclutter_LayoutManager_beginAnimation(JNIEnv *, jobject, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_LayoutManager_endAnimation(JNIEnv *, jobject);
JNIEXPORT jdouble JNICALL Java_org_jclutter_LayoutManager_getAnimationProgress(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_FixedLayout_newInstance(JNIEnv *, jclass);
JNIEXPORT jint JNICALL Java_org_jclutter_FlowLayout_newInstance(JNIEnv *, jclass, jint);
JNIEXPORT void JNICALL Java_org_jclutter_FlowLayout_setHomogeneous(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_FlowLayout_isHomogeneous(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_FlowLayout_setOrientation(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_FlowLayout_getOrientation(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_FlowLayout_setColumnSpacing(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_FlowLayout_getColumnSpacing(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_FlowLayout_setRowSpacing(JNIEnv *, jobject, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_FlowLayout_getRowSpacing(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_FlowLayout_setColumnWidth(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_FlowLayout_getColumnMaxWidth(JNIEnv *, jobject);
JNIEXPORT jfloat JNICALL Java_org_jclutter_FlowLayout_getColumnMinWidth(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_FlowLayout_setRowHeight(JNIEnv *, jobject, jfloat, jfloat);
JNIEXPORT jfloat JNICALL Java_org_jclutter_FlowLayout_getRowMaxHeight(JNIEnv *, jobject);
JNIEXPORT jfloat JNICALL Java_org_jclutter_FlowLayout_getRowMinHeight(JNIEnv *, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_BoxLayout_newInstance(JNIEnv *, jclass);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setPackStart(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_BoxLayout_isPackStart(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setSpacing(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_BoxLayout_getSpacing(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setVertical(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_BoxLayout_getVertical(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_pack(JNIEnv *, jobject, jobject, jboolean, jboolean, jboolean, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setAlignment(JNIEnv *, jobject, jobject, jint, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_BoxLayout_getAlignmentX(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_BoxLayout_getAlignmentY(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setExpand(JNIEnv *, jobject, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_BoxLayout_isExpand(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setFill(JNIEnv *, jobject, jobject, jboolean, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_BoxLayout_isFillX(JNIEnv *, jobject, jobject);
JNIEXPORT jboolean JNICALL Java_org_jclutter_BoxLayout_isFillY(JNIEnv *, jobject, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setUseAnimations(JNIEnv *, jobject, jboolean);
JNIEXPORT jboolean JNICALL Java_org_jclutter_BoxLayout_isUseAnimations(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setEasingDuration(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_BoxLayout_getEasingDuration(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BoxLayout_setEasingMode(JNIEnv *, jobject, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_BoxLayout_getEasingModeNative(JNIEnv *, jobject);
JNIEXPORT void JNICALL Java_org_jclutter_BinLayout_add(JNIEnv *, jobject, jobject, jint, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_BinLayout_newInstance(JNIEnv *, jclass, jint, jint);
JNIEXPORT void JNICALL Java_org_jclutter_BinLayout_setAlignment(JNIEnv *, jobject, jobject, jint, jint);
JNIEXPORT jint JNICALL Java_org_jclutter_BinLayout_getAlignmentX(JNIEnv *, jobject, jobject);
JNIEXPORT jint JNICALL Java_org_jclutter_BinLayout_getAlignmentY(JNIEnv *, jobject, jobject);
